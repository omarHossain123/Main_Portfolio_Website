/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Wizard = React.memo(function Wizard(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/wizard-transformed.glb");

  const modelRef = useRef();


  useFrame((state) => {
    modelRef.current.position.y =
      0 + Math.sin(state.clock.elapsedTime) * 0.15;
  });

  return (
    <group ref={modelRef} {...props} dispose={null}
      position={[0, 0, 0,]}
      scale={[2, 2, 2]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
      />
    </group>
  )  
});

export default Wizard;
useGLTF.preload("/models/wizard-transformed.glb");
